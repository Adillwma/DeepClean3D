import numpy as np
import matplotlib.pyplot as plt
import math

"""
This is going to be very complicated, but it may be important if we want to use a simple CONVOLUTIONAL NN to
only return a prediction of the important points (like particle velocity, impact point, charge, mass etc.)
"""

"""
This function will take in all available information about the particle at impact, and return the pattern as an array along with
its information.
PARTICLE INFO:
- Impact coordinates
- Impact velocty
- Impact time
- Pattern formed
"""

"""
CHERENKOV PHOTONS INFO:
When a particle enters the medium, it is traveling a velocity v, and so moves dist vdt.
The light will be travelling at a velocity c/n, and so moves dist cdt/n.
Hence, the angle of the CONE of cherenkov radiation (to the direction of motion) is given by:
angle = cos((cdt/n) / (vdt)) = cos(c / nv)

IMPACT ANGLE:
The angle the particle impacts depends on how much the particle is bent from the magnet.
This is directly related to the impact coordinate.
There is ~6m from the magnet to TORCH. The entire detector is 6m wide (9 detectors) and 5m tall (2 detectors)
"""

def final_real_sim(sig_pts = 1000, detector_dim = (128,88), coord = 'random', v = 'random', time = 'leave out for now', ideal=0, debug_image_generator=0):

    # first define all the useful constants:
    # speed of light:
    c = 3E8
    # quartz refractive index:
    n_qu = 1.458

    # Photons released in cone around impact drn.
    # Angles are random 

